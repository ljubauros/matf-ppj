%{

#include <iostream>
#include <string>
#include <map>
using namespace std;

extern int yylex();

map<string, int> vars;

void yyerror(string s){
    cerr << "Sintaksna greska: " << s << endl;
    exit(EXIT_FAILURE);
}

%}

%union{
	string* ime;
	int broj;
}

%token<ime> ID;
%token<broj> BROJ;
%token DODELA NR PRINT INC DEC EXIT_T PROVERA GR NGR EQ NEQ

%left '+' '-'
%left '*'

%start program
%type<broj> izraz linija uslov

%%

program: linija NR program 	{}
	|						{}
	;

linija:  ID DODELA izraz 	{vars[*$1] = $3; 
							 $$ = $3;
							 delete $1;
							}
		|PRINT izraz		{printf("%c\n", $2); }
		|PROVERA uslov		{printf("%d\n", $2); }
		|EXIT_T				{return 0; }
		;
uslov:	 izraz NEQ izraz 	{
								if($1 != $3){	
									$$ = 1;
								}else{ $$ = 0;}
							}
		|izraz EQ izraz 	{ 
								if($1 == $3){	
									$$ = 1;
								}else{ $$ = 0;}
							}
		|izraz NGR izraz	{ 
								if($1 <= $3){	
									$$ = 1;
								}else{ $$ = 0;}
							}
		|izraz GR izraz 	{ 	
								if($1 > $3){	
									$$ = 1;
								}else{ $$ = 0;}
							}
		;
izraz:  ID					{ auto it = vars.find(*$1);
								if (it == vars.end()) {
									$$ = 0;
									cout << "nepostojeca var" << endl;
									exit(EXIT_FAILURE);
								}
								delete $1;
								$$ = it->second; 
							}
		|izraz '-' izraz	{ $$ = $1 - $3; }
		|izraz '*' izraz	{ $$ = $1 * $3; }
		|izraz '+' izraz	{ $$ = $1 + $3; }
		|'(' izraz ')'		{ $$ = $2; }
		|INC ID				{ auto it = vars.find(*$2);
								if(it == vars.end()){
									$$ = 0;
									delete $2;
									cout << "nepostojeca var" << endl;
									exit(EXIT_FAILURE);
								}
								(it->second)++;
								delete $2;
								$$ = it->second;
							}
		|DEC ID				{ auto it = vars.find(*$2);
								if(it == vars.end()){
									$$ = 0;
									delete $2;
									cout << "nepostojeca var" << endl;
									exit(EXIT_FAILURE);
								}
								(it->second)--;
								delete $2;
								$$ = it->second;
							}
		|ID INC				{ auto it = vars.find(*$1);
								if(it == vars.end()){
									$$ = 0;
									delete $1;
									cout << "nepostojeca var" << endl;
									exit(EXIT_FAILURE);
								}
								(it->second)++;
								delete $1;
								$$ = it->second;
							}
		|ID DEC				{ auto it = vars.find(*$1);
								if(it == vars.end()){
									$$ = 0;
									delete $1;
									cout << "nepostojeca var" << endl;
									exit(EXIT_FAILURE);
								}
								(it->second)--;
								delete $1;
								$$ = it->second;
							}
		|BROJ				{ $$ = $1; }
		;



%%

int main(){
	if(yyparse() == 0){
		cout << "sve ok" << endl;
		exit(EXIT_SUCCESS);
	}
	exit(EXIT_FAILURE);
	
}